@using Slipp.Services.DTO
@using Slipp.Services.Models
@using System.Net
@using Slipp.Services.Constants
@inject NavigationManager NavigationManager

<div class="component-content">
    <div class="my-card" style="background-image: url('@Ticket.Images[0].Url');" onclick="@ShowPaymentPage">
            
        <div class="my-card-content">
            @*<MudImage Fluid="true" Src="images/ticket.svg" Class="ticketFrame"/>*@
            
            @*TODO Flytta avataren till höger (ovanför Entré köföreträde)*@

            <div class="date-avatar">
                <MudAvatar Style="height: 48px; width: 48px; font-size: 0.8rem; color: #121821; font-weight: 600;" Color="Color.Primary">@Ticket.StartValidTime.ToString("dd") <br/> @Ticket.StartValidTime.ToString("MMM").Remove(3, 1).ToUpper()</MudAvatar>
            </div>
            <div class="ticket-circles">
                <p id="tl"></p>
                <p id="bl"></p>
                <p id="mu"></p>
                <p id="ml"></p>
                <p id="tr"></p>
                <p id="br"></p>
            </div>

            <div id="content-left">
                <MudText Typo="Typo.h2">@Ticket.ClubName</MudText>
                <MudText Typo="Typo.body2">@Ticket.Title</MudText>
                <MudContainer>
                    <hr class="hr-divider"/>
                    <MudText Typo="Typo.body2">Tillgängliga biljetter:</MudText>
                    <MudText Typo="Typo.h3">8</MudText>
                    <MudText Typo="Typo.body2">@Ticket.StartValidTime.ToShortDateString() | @Ticket.StartValidTime.ToShortTimeString()</MudText>
                </MudContainer>
            </div>
            <div id="content-right">
                <MudText Typo="Typo.body2">Entré + köföreträde:</MudText>
                <MudText Typo="Typo.h5">@Math.Round(Ticket.Price) SEK</MudText>
                @if (IsFavourite)
                {

                    <MudIconButton Icon="@Icons.Filled.Favorite" Color="Color.Primary" OnClick="OnHeartClicked"/>

                    <MudMessageBox @ref="mbox" >
                        
                        <MessageContent>
                            <div class="message-box-icon">
                            <MudIconButton Class="align-center" Icon="@Icons.Filled.HeartBroken" Color="Color.Primary"></MudIconButton>
                            </div>
                            <MudText Align="Align.Center" Typo="Typo.body2">Vill du ta bort biljetten <br> från dina favoriter?</MudText>

                        </MessageContent>
                        <YesButton>
                            <MudButton Color="Color.Error">Ja!</MudButton>
                        </YesButton>
                        <CancelButton>
                            <MudButton Color="Color.Primary">Nej!</MudButton>
                        </CancelButton>
                    </MudMessageBox>
                    
                }
                else
                {
                    <MudIconButton Icon="@Icons.Filled.FavoriteBorder" Color="Color.Primary" OnClick="OnHeartClicked"/>
                }

            </div>
        </div>
    </div>
</div>





@code {
    [Parameter] public CreateTicketOutput Ticket { get; set; }
    public string pageToGoToUrl { get; set; }
    public string returnUrl { get; set; }
    //public string apiRequestForThisTicket { get; set; }
    MudMessageBox mbox { get; set; }
    string state = "Message box hasn't been opened yet";



    //TODO Kolla om den är favorit genom att kolla i FavouriteTicket i AppUser
    public bool IsFavourite = false;


    private async void OnHeartClicked()
    {
        

        if (IsFavourite)
        {
            bool? result = await mbox.Show();
            state= result==null ? "Cancelled" : "Deleted!";
            
            if (result==true)
            {
                StateHasChanged();
                MakeFavourite();
            }
           
        }
        else
        {
            MakeFavourite();
        }
        
        
    }

    public void MakeFavourite()
    {
        if (IsFavourite)
        {
            IsFavourite = false;
    @*ToDO Ta bort ur favoriter-listan*@
        }
        else
        {
            IsFavourite = true;
    @*TODO Lägg till i favoriter-listan*@
        }
    }

    public void ShowPaymentPage()
    {
        pageToGoToUrl =  "pay/"+Ticket.Id; //TicketId ska sen bytas mot query
        returnUrl = WebUtility.UrlEncode(new Uri(NavigationManager.Uri).PathAndQuery);

        NavigationManager.NavigateTo($"{pageToGoToUrl}?returnUrl={returnUrl}");
    }
       
    

}

<style>
    .message-box-icon {
        display: flex;
        justify-content: center;
    }
    ::deep .mud-dialog-actions{
        justify-content: center !important;
    }
</style>
