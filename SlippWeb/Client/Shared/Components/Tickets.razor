@using System.Text.Json
@using System.Text.Json.Serialization;
@using Slipp.Services.DTO
@using Slipp.Services.Models
@using System.Net
@inject ITicketAPIService TicketApiService



<div class="main-container">
    @if (tickets == null)
    {
        <MudProgressCircular Size="Size.Large" Color="Color.Primary" Indeterminate="true" />
    }

    else
    {
        @foreach (var ticket in tickets)
        {
          if (favouriteTicketIds.Contains(ticket.Id))
            {
                <TicketCard Ticket=ticket IsFavourite=true/>
            }
            else
            {                
                <TicketCard Ticket=ticket IsFavourite=false/>
            } 
        }
    }
</div>




@code {
    private IEnumerable<TicketOutput> tickets;
    private List<Guid> favouriteTicketIds;

    protected override async Task OnInitializedAsync()
    {
        favouriteTicketIds = new List<Guid>();
        tickets = await TicketApiService.GetTickets(null, null);

        if (TicketApiService.User == null) return;
        
        var favouriteTickets = await TicketApiService.GetFavouriteTickets();
        if (favouriteTickets == null) return;

        foreach (var favouriteTicket in favouriteTickets)
        {
            favouriteTicketIds.Add(favouriteTicket.Id);
        }
        
    }


}

<style>
    .main-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding-top: 20px;
    }
</style>

